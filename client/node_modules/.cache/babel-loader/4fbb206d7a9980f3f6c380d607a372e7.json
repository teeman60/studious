{"ast":null,"code":"var _jsxFileName = \"/Users/teewhy/Development/code/mod5/studious/client/src/App.js\";\nimport React, { Component } from 'react';\nimport SignUp from './SignUp';\nimport Login from './Login';\nimport Menu from './Menu';\nimport UserInfo from './UserInfo';\nimport NewAppointmentForm from './NewAppointmentForm';\nimport Skill from './Skill';\nimport NewPost from './NewPost';\nimport PostCollection from './PostCollection';\nimport NewComment from './NewComment';\nimport Chat from './Chat_client/Chat.js';\nimport Header from './Header';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './framework.css';\nimport './layout.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.login = e => {\n      // debugger\n      e.preventDefault();\n      fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      }).then(res => res.json()).then(UserInfo => {\n        if (UserInfo.token) {\n          localStorage.token = UserInfo.token;\n          localStorage.user_id = UserInfo.id;\n          localStorage.user_name = UserInfo.username;\n          this.setState({\n            isLoggedIn: true\n          });\n          this.props.history.push(\"/menu\");\n        } else {\n          alert(\"Invalid Username or password\");\n        }\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        username: '',\n        password: ''\n      });\n    };\n\n    this.changeState = e => {\n      // debugger\n      e.preventDefault();\n      this.setState({\n        isLoggedIn: !this.state.isLoggedIn\n      });\n    };\n\n    this.state = {\n      user: [],\n      username: \"\",\n      password: \"\",\n      isLoggedIn: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: routeProps => /*#__PURE__*/React.createElement(Login, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 37\n        }\n      })),\n      changeState: this.changeState,\n      handleChange: this.handleChange,\n      login: this.login,\n      resetForm: this.resetForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: routeProps => /*#__PURE__*/React.createElement(SignUp, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      })),\n      changeState: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/chatroom\",\n      render: routeProps => /*#__PURE__*/React.createElement(Chat, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 37\n        }\n      })),\n      changeState: this.changeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/skills\",\n      render: routeProps => /*#__PURE__*/React.createElement(Skill, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `/users/:id`,\n      render: routeProps => /*#__PURE__*/React.createElement(UserInfo, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      })),\n      user: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/postcollection\",\n      render: routeProps => /*#__PURE__*/React.createElement(PostCollection, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/newappointment\",\n      render: routeProps => /*#__PURE__*/React.createElement(NewAppointmentForm, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/comment\",\n      render: routeProps => /*#__PURE__*/React.createElement(NewComment, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: '/posts/:id',\n      render: routeProps => /*#__PURE__*/React.createElement(NewPost, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/menu\",\n      render: routeProps => /*#__PURE__*/React.createElement(Menu, Object.assign({}, routeProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/teewhy/Development/code/mod5/studious/client/src/App.js"],"names":["React","Component","SignUp","Login","Menu","UserInfo","NewAppointmentForm","Skill","NewPost","PostCollection","NewComment","Chat","Header","BrowserRouter","Route","Switch","App","constructor","handleChange","e","setState","target","name","value","login","preventDefault","fetch","method","headers","body","JSON","stringify","username","state","password","then","res","json","token","localStorage","user_id","id","user_name","isLoggedIn","props","history","push","alert","resetForm","changeState","user","render","routeProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport SignUp from './SignUp';\nimport Login from './Login';\nimport Menu from './Menu';\nimport UserInfo from './UserInfo';\nimport NewAppointmentForm from './NewAppointmentForm';\nimport Skill from './Skill';\nimport NewPost from './NewPost';\nimport PostCollection from './PostCollection'\nimport NewComment from './NewComment'\nimport Chat from './Chat_client/Chat.js'\nimport Header from './Header'\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\n\nimport './framework.css'\nimport './layout.css'\n\n\n\n\n\nclass App extends Component {\n\n\n  constructor() {\n    super()\n    this.state = {\n        user: [],\n        username: \"\",\n        password: \"\",\n        isLoggedIn: false\n    }\n  }\n\n\n\n  handleChange = (e) => {\n    \n    this.setState({\n        [e.target.name]: e.target.value\n    })  \n         \n  }\n\n\n\n  login = (e) => {\n    // debugger\n    e.preventDefault()\n    \n    fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n        })\n                \n    })\n        .then(res => res.json())\n        .then(UserInfo => {\n            if (UserInfo.token) {\n                localStorage.token = UserInfo.token \n                localStorage.user_id = UserInfo.id\n                localStorage.user_name = UserInfo.username\n                this.setState({isLoggedIn: true}) \n                this.props.history.push(\"/menu\") \n            } else {\n                alert(\"Invalid Username or password\")\n            }\n            \n        })      \n              \n  }\n\n\n\n  resetForm = () => {\n    this.setState({ username: '', password: '' })\n  }\n\n\n  changeState = (e) => {\n    // debugger\n    e.preventDefault()\n    this.setState({\n      isLoggedIn: !this.state.isLoggedIn\n    })\n  }\n\n\n  render () {\n    \n\n    return (      \n            \n      <div >\n\n        <Header />\n\n        <BrowserRouter> \n        \n        \n          <Switch>               \n            \n\n            <Route exact path=\"/\"\n            render={(routeProps) => <Login {...routeProps}/>} changeState={this.changeState} handleChange={this.handleChange} login={this.login} resetForm={this.resetForm}/>\n\n\n            <Route exact path=\"/signup\"\n            render={(routeProps) => <SignUp {...routeProps}/>} changeState={this.changeState}/>\n\n\n            <Route exact path=\"/chatroom\"\n            render={(routeProps) => <Chat {...routeProps}/>} changeState={this.changeState}/>\n\n\n            <Route exact path=\"/skills\"\n            render={(routeProps) => <Skill {...routeProps}/>}/>\n\n\n            <Route exact path={`/users/:id`}\n            render={(routeProps) => <UserInfo {...routeProps}/>} user={this.state.user}/>\n            \n\n            <Route exact path=\"/postcollection\"\n            render={(routeProps) => <PostCollection {...routeProps}/>} />\n\n\n            <Route exact path=\"/newappointment\"\n            render={(routeProps) => <NewAppointmentForm {...routeProps}/>} />\n\n\n            <Route exact path=\"/comment\"\n            render={(routeProps) => <NewComment {...routeProps}/>} />\n\n\n            <Route exact path={'/posts/:id'}\n            render={(routeProps) => <NewPost {...routeProps}/>} />         \n            \n\n            <Route exact path=\"/menu\"\n            render={(routeProps) => <Menu {...routeProps} />} />\n        \n                  \n            </Switch>\n\n            \n\n        </BrowserRouter>\n          \n      </div>\n      \n      \n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
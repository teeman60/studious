{"ast":null,"code":"var _jsxFileName = \"/Users/teewhy/Development/code/mod5/studious/client/src/PostCollection.js\";\nimport React, { Component } from 'react';\nimport Post from './Post';\nimport './Cards/card-style.css';\nimport NavBar from './NavBar';\nimport Footer from './Footer';\n\nclass PostCollection extends Component {\n  constructor() {\n    super();\n\n    this.toggleResolved = post => {\n      // debugger\n      fetch(`http://localhost:3000/posts/resolve/${post.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify(post.attributes['resolved?'] = !post.attributes['resolved?'])\n      }).then(res => res.json()).then(post => {\n        this.setState({});\n      });\n    };\n\n    this.getComments = post => {\n      // debugger\n      this.props.history.push(\"/comment\");\n    };\n\n    this.increaseLikes = post => {\n      // debugger\n      localStorage.token ? fetch(`http://localhost:3000/posts/like/${post.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${localStorage.token}`\n        },\n        body: JSON.stringify(++post.attributes.likes)\n      }).then(res => res.json()).then(post => {\n        this.setState({\n          likes: post.data.attributes.likes\n        });\n      }) : alert(\"You're not logged in\");\n    };\n\n    this.handleDelete = post => {\n      // debugger  \n      this.setState({\n        postCollection: this.state.postCollection.filter(p => p !== post)\n      });\n      fetch(`http://localhost:3000/posts/${post.id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Authorization': `Bearer ${localStorage.token}`\n        }\n      });\n    };\n\n    this.state = {\n      postCollection: [],\n      postContent: [],\n      likes: 0,\n      comments: [],\n      createdAt: \"\"\n    };\n  }\n\n  componentWillMount() {\n    fetch('http://localhost:3000/posts').then(res => res.json()).then(posts => {\n      this.setState({\n        postCollection: posts.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'purple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }), this.state.postCollection.map((p, i) => /*#__PURE__*/React.createElement(Post, {\n      key: i,\n      post: p,\n      handleDelete: this.handleDelete,\n      increaseLikes: this.increaseLikes,\n      toggleResolved: this.toggleResolved,\n      getComments: this.getComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default PostCollection;","map":{"version":3,"sources":["/Users/teewhy/Development/code/mod5/studious/client/src/PostCollection.js"],"names":["React","Component","Post","NavBar","Footer","PostCollection","constructor","toggleResolved","post","fetch","id","method","headers","localStorage","token","body","JSON","stringify","attributes","then","res","json","setState","getComments","props","history","push","increaseLikes","likes","data","alert","handleDelete","postCollection","state","filter","p","postContent","comments","createdAt","componentWillMount","posts","render","backgroundColor","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Post from './Post';\nimport './Cards/card-style.css'\nimport NavBar from './NavBar';\nimport Footer from './Footer'\n\n\nclass PostCollection extends Component {\n    \n    constructor() {\n        super()\n        this.state = {\n            postCollection: [],\n            postContent: [],\n            likes: 0,\n            comments: [],\n            createdAt: \"\"\n            \n        }\n    }\n\n\n    componentWillMount() {\n        fetch('http://localhost:3000/posts')\n            .then(res => res.json())\n            .then( posts => {\n                this.setState({\n                    postCollection: posts.data\n                })\n            })\n    }\n\n\n\n    toggleResolved = (post) => {\n        // debugger\n\n        fetch(`http://localhost:3000/posts/resolve/${post.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify(\n\n                 post.attributes['resolved?'] = !post.attributes['resolved?']\n            )\n\n        })\n            .then(res => res.json())\n            .then(post => {\n                this.setState({\n\n                })\n            })\n           \n        \n    }\n\n\n    getComments = (post) => {\n        // debugger\n        this.props.history.push(\"/comment\")\n    }\n\n\n    increaseLikes = (post) => {\n            // debugger\n        localStorage.token\n\n        ?\n\n        fetch(`http://localhost:3000/posts/like/${post.id}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${localStorage.token}`\n            },\n            body: JSON.stringify(\n                ++post.attributes.likes\n            )\n            \n        }\n        )\n            .then(res => res.json())\n            .then( post => {\n                \n                this.setState({\n                    likes: post.data.attributes.likes\n                })\n            }\n            \n                \n            )\n            :\n            alert(\"You're not logged in\")\n            \n    }\n\n\n    handleDelete = (post) => {\n        // debugger  \n        this.setState({\n            postCollection: this.state.postCollection.filter(p => p !== post)\n        })\n        fetch(`http://localhost:3000/posts/${post.id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': `Bearer ${localStorage.token}`\n            }\n            \n        })\n\n\n    }\n\n\n\n    render() { \n        return ( \n            <div style={{backgroundColor: 'purple'}}>\n                <NavBar history={this.props.history}/>\n\n                {this.state.postCollection.map((p, i) => \n                <Post key={i} post={p} handleDelete={this.handleDelete} increaseLikes={this.increaseLikes} toggleResolved={this.toggleResolved} getComments={this.getComments} />)}\n                {/* {props.post.attributes.comments.map((c, i) => <p key={i}>{c}</p>)} */}\n                <Footer />\n            </div> \n         );\n    }\n}\n \nexport default PostCollection;"]},"metadata":{},"sourceType":"module"}